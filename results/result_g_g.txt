net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 32 K-images (0 Kilo-batches_64) 

 calculation mAP (mean average precision)...
 Detection layer: 139 - type = 27 
 Detection layer: 150 - type = 27 
 Detection layer: 161 - type = 27 

 detections_count = 4655, unique_truth_count = 465  
 rank = 0 of ranks = 4655 
 rank = 100 of ranks = 4655 
 rank = 200 of ranks = 4655 
 rank = 300 of ranks = 4655 
 rank = 400 of ranks = 4655 
 rank = 500 of ranks = 4655 
 rank = 600 of ranks = 4655 
 rank = 700 of ranks = 4655 
 rank = 800 of ranks = 4655 
 rank = 900 of ranks = 4655 
 rank = 1000 of ranks = 4655 
 rank = 1100 of ranks = 4655 
 rank = 1200 of ranks = 4655 
 rank = 1300 of ranks = 4655 
 rank = 1400 of ranks = 4655 
 rank = 1500 of ranks = 4655 
 rank = 1600 of ranks = 4655 
 rank = 1700 of ranks = 4655 
 rank = 1800 of ranks = 4655 
 rank = 1900 of ranks = 4655 
 rank = 2000 of ranks = 4655 
 rank = 2100 of ranks = 4655 
 rank = 2200 of ranks = 4655 
 rank = 2300 of ranks = 4655 
 rank = 2400 of ranks = 4655 
 rank = 2500 of ranks = 4655 
 rank = 2600 of ranks = 4655 
 rank = 2700 of ranks = 4655 
 rank = 2800 of ranks = 4655 
 rank = 2900 of ranks = 4655 
 rank = 3000 of ranks = 4655 
 rank = 3100 of ranks = 4655 
 rank = 3200 of ranks = 4655 
 rank = 3300 of ranks = 4655 
 rank = 3400 of ranks = 4655 
 rank = 3500 of ranks = 4655 
 rank = 3600 of ranks = 4655 
 rank = 3700 of ranks = 4655 
 rank = 3800 of ranks = 4655 
 rank = 3900 of ranks = 4655 
 rank = 4000 of ranks = 4655 
 rank = 4100 of ranks = 4655 
 rank = 4200 of ranks = 4655 
 rank = 4300 of ranks = 4655 
 rank = 4400 of ranks = 4655 
 rank = 4500 of ranks = 4655 
 rank = 4600 of ranks = 4655 
class_id = 0, name = prohibitory, ap = 74.38%   	 (TP = 242, FP = 192) 
class_id = 1, name = mandatory, ap = 15.04%   	 (TP = 2, FP = 0) 
class_id = 2, name = danger, ap = 45.13%   	 (TP = 23, FP = 7) 

 for conf_thresh = 0.25, precision = 0.57, recall = 0.57, F1-score = 0.57 
 for conf_thresh = 0.25, TP = 267, FP = 199, FN = 198, average IoU = 44.49 % 

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall 
 mean average precision (mAP@0.50) = 0.448502, or 44.85 % 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

